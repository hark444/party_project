To Do List

- Design core business logic using design document [PPDEV-006]

- Logger

- Write UTs for party CRUD APIs [PPDEV-015]

- Write UTs for parties_attented CRUD APIs [PPDEV-020]

- After removing parties_due table, 'parties_due' count was suggested to be stored in redis or memcache.
    - Create Redis connections [PPDEV-021]
    - Write Logic to create and invalidate cache [PPDEV-022]

- Small independent tasks:
    - create DELETE for account_user. [PPDEV-011]
    - Write a common class for database communications [PPDEV-013]
    - Add pagination to all GET-ALL APIs [PPDEV-019]
    - Add validations in user create API to check if a user exists with the same email [PPDEV-023]
    - Add field party_name in create party [PPDEV-030]
    - Remove approved and ratings field from create party [PPDEV-031]
    - Remove user/user_id from party requests and yield it from the token itself [PPDEV-032]

- Bug and improvements:
    - Create API to get all parties. [PPDEV-017]
    - Update date type in user request/response and model [PPDEV-033]

- Design individual roles with specific permissions [PPDEV-012]

- Fix all failing UTs [PPDEV-028]
- Add new feature UTs [PPDEV-029]



Completed Tasks

- Create FastAPI boiler plate
- Create User Module
- Create Roles Module
- Setup black[PPDEV-000]
    - setup black and fix all files[PPDEV-000-A]
- Write unit tests [PPDEV-001]
    - Create boiler plate for UTs[PPDEV-001-A]
    - Write UTs for auth[PPDEV-001-B]
    - Write UTs for user[PPDEV-001-C]
- Integrate User-Roles modules[PPDEV-002]
    - Create role type enum and user mappings[PPDEV-002-A]
    - Update the user schemas[PPDEV-002-B]
    - Create API(PATCH) to update user roles[PPDEV-002-C]
    - Write UTs for roles [PPDEV-002-D]
    - Create Scope for permitted API usage
- Separate Auth and User & update UTs [PPDEV-003]
- Create party table structure [PPDEV-004]
- Create following tables: [PPDEV-005]
    - party: id, user_id, reason, created_on, proposed_date, guests_invited, given_date, place, approved, ratings
    - parties_due: id, user_id, parties_due
    - parties_attended: party_id, attendee, rating, approved, comment
- Permissions setup and Create PUT for account_user [PPDEV-010]
- Create party CRUD APIs [PPDEV-008]
- Create parties_attended CRUD APIs [PPDEV-009]
- Try and remove parties_due table [PPDEV-007]
- Consolidate Schema [PPDEV-012]
- Put constants in env file and create env.example file [PPDEV-018]
- Split user schema into request-response [PPDEV-016]
- Create a common time stamp schema and independent response schema [PPDEV-014]
- Update user API to receive request in json format and not as form data [PPDEV-024]
- Enable CORS [PPDEV-025]
- Add team and date_of_joining in account_user table [PPDEV-026]
- Return username with token API [PPDEV-027]